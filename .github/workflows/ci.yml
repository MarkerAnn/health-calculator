name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Get versions
        id: versions
        run: |
          echo "node_version=$(node -v)" >> $GITHUB_OUTPUT
          echo "jest_version=$(npm list jest | grep jest)" >> $GITHUB_OUTPUT

      - name: Lint code
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check

      - name: Build project
        run: npm run build

      - name: Run tests and generate report
        run: npm run test

      - name: Generate Markdown report
        run: |
          cat << EOF > TESTREPORT.md
          # Test Report

          ## Environment
          - Node.js version: ${{ steps.versions.outputs.node_version }}
          - Jest version: ${{ steps.versions.outputs.jest_version }}

          ## Summary
          - **Date:** $(date)
          - **Commit:** ${{ github.sha }}

          ## Test Results
          $(grep -oP '(?<=Suites \().*?(?=\))' testReport.html | sed 's/^/- Suites: /')
          $(grep -oP '(?<=Tests \().*?(?=\))' testReport.html | sed 's/^/- Tests: /')

          ## Test Suites

          | Suite | Tests | Duration |
          |-------|-------|----------|
          $(grep -oP '(?<=<div class="suite-info">).*?(?=</div>)' testReport.html | 
            sed -E 's#.*/__test__/(.*)\.test\.ts.*#\1#' |
            while read -r suite; do
              tests=$(grep -c "$suite" <<< "$(grep -oP '(?<=<div class="test-suitename">).*?(?=</div>)' testReport.html)")
              duration=$(grep -oP "(?<=$suite\.test\.ts</div><div class=\"suite-time\">).*?(?=</div>)" testReport.html)
              echo "| $suite | $tests | $duration |"
            done)

          ## Detailed Test Results

          $(grep -oP '(?<=<div class="test-info">).*?(?=</div></div>)' testReport.html |
            while IFS= read -r line; do
              suite=$(echo "$line" | grep -oP '(?<=<div class="test-suitename">).*?(?=</div>)')
              title=$(echo "$line" | grep -oP '(?<=<div class="test-title">).*?(?=</div>)')
              status=$(echo "$line" | grep -oP '(?<=<div class="test-status">).*?(?=</div>)')
              duration=$(echo "$line" | grep -oP '(?<=<div class="test-duration">).*?(?=</div>)')
              
              if [[ "$suite" != "$current_suite" ]]; then
                echo -e "\n### $suite"
                current_suite="$suite"
              fi
              
              icon=$([ "$status" = "passed" ] && echo "✅" || echo "❌")
              echo "$icon $title ($duration)"
            done)
          EOF

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: TESTREPORT.md

      - name: Commit and push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add TESTREPORT.md
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update test results" && git push)
